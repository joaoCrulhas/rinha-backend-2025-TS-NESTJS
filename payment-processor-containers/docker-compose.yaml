x-service-templates:
  # Base app service template
  app-base: &app-base
    build:
      context: ../
      dockerfile: Dockerfile
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.65"
          memory: "140MB"
    expose:
      - "3000"
    volumes:
      - rinha-store:/data
    environment:
      - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
      - DATABASE_PATH=/app/database.sqlite
      - NODE_ENV=production
      - REDIS_HOST=redis
      - RINHA_TOKEN=123
    restart: unless-stopped
    depends_on:
      - payment-processor-1
      - payment-processor-2
      - redis

  # Payment processor service template
  payment-processor: &payment-processor
    image: zanfranceschi/payment-processor:arm64-20250707101540
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "100MB"
    environment:
      - RATE_LIMIT_SECONDS=5
      - INITIAL_TOKEN=123
    depends_on:
      - payment-processor-db-1

  # Payment processor DB template
  payment-processor-db: &payment-processor-db
    image: postgres:17-alpine
    networks:
      - payment-processor
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "250MB"
    ports:
      - "54321:5432"

services:

  app2:
    <<: *app-base
    container_name: app2

  app1:
    <<: *app-base
    container_name: app1
    depends_on:
      payment-processor-1:
        condition: service_started
      payment-processor-2:
        condition: service_started
      redis:
        condition: service_healthy

  payment-processor-1:
    <<: *payment-processor
    container_name: payment-processor-default
    hostname: payment-processor-default
    environment:
      - TRANSACTION_FEE=0.05
      - DB_CONNECTION_STRING=Host=payment-processor-default-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=15;Maximum Pool Size=20;Connection Pruning Interval=3
    ports:
      - "8001:8080"

  payment-processor-db-1:
    <<: *payment-processor-db
    container_name: payment-processor-default-db
    hostname: payment-processor-default-db

  payment-processor-2:
    <<: *payment-processor
    container_name: payment-processor-fallback
    hostname: payment-processor-fallback
    environment:
      - TRANSACTION_FEE=0.15
      - DB_CONNECTION_STRING=Host=payment-processor-fallback-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=15;Maximum Pool Size=20;Connection Pruning Interval=3
    ports:
      - "8002:8080"
    depends_on:
      - payment-processor-db-2
  
  payment-processor-db-2:
    <<: *payment-processor-db
    container_name: payment-processor-fallback-db
    hostname: payment-processor-fallback-db
    ports:
      - "54322:5432"

  redis:
    hostname: redis
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "275MB"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    container_name: redis
    volumes:
      - redis_data:/data
    image: redis:alpine
    ports:
      - "6379:6379"

  nginx:
    networks:
      - backend
    image: nginx:stable-alpine
    container_name: nginx-load-balancer
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app2
      - app1
    restart: unless-stopped

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  redis_data:
  rinha-store:
